{"version":3,"sources":["webpack:///./src/components/Sections/Catalogue/DownloadsItem.tsx","webpack:///./src/components/Sections/Catalogue/Downloads.tsx","webpack:///./src/pages/downloads.tsx","webpack:///./src/components/Sections/Catalogue/Downloads.module.scss","webpack:///./src/components/utils/ImgSharp/ImgSharp.tsx"],"names":["DownloadsItem","item","formatMessage","useIntlHelper","className","styles","catalogueWrapper","ImgSharp","catalogueCardImage","alt","id","fixed","image","childImageSharp","catalogueCardContent","catalogueCardHeader","catalogueCardTitle","catalogueCardExcerpt","href","link","downloadButton","catalogueCardMeta","catalogueCardBylineContent","Downloads","data","useStaticQuery","QUERY","flexWrapper","catalogues","nodes","map","i","key","downloads","manuals","DownloadsPage","Layout","template","module","exports","fluid","src","props"],"mappings":"yLAwEeA,EAvDV,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACCC,EAAkBC,cAAlBD,cAER,OACC,2BAASE,UAAWC,IAAOC,kBAC1B,gBAACC,EAAA,EAAD,CACCH,UAAWC,IAAOG,mBAClBC,IAAKR,EAAKS,GAEVC,MAAOV,EAAKW,MAAMC,gBAAgBF,QAGnC,uBAAKP,UAAWC,IAAOS,sBACtB,0BAAQV,UAAWC,IAAOU,qBAOzB,sBAAIX,UAAWC,IAAOW,oBACpBd,EAAc,aAAeD,EAAKS,MAGrC,2BAASN,UAAWC,IAAOY,sBAC1B,yBACC,qBAAGC,KAAMjB,EAAKkB,MACb,0BAAQf,UAAWC,IAAOe,gBACxBlB,EAAc,wBAMnB,0BAAQE,UAAWC,IAAOgB,mBACzB,uBAAKjB,UAAWC,IAAOiB,iCC1CfC,EAAsB,WAClC,IAAMC,EAAuBC,yBAAeC,GACpCxB,EAAkBC,cAAlBD,cACR,OACC,2BAASE,UAAU,yCAClB,+BACC,0BAAKF,EAAc,yBACnB,uBAAKE,UAAWC,IAAOsB,aACrBH,EAAKI,WAAWC,MAAMC,KACtB,SAAC7B,EAAsC8B,GACtC,OAAO,gBAAC,EAAD,CAAe9B,KAAMA,EAAM+B,IAAKD,QAI1C,0BAAK7B,EAAc,wBACnB,uBAAKE,UAAWC,IAAOsB,aACrBH,EAAKS,UAAUJ,MAAMC,KACrB,SAAC7B,EAAsC8B,GACtC,OAAO,gBAAC,EAAD,CAAe9B,KAAMA,EAAM+B,IAAKD,QAI1C,0BAAK7B,EAAc,sBACnB,uBAAKE,UAAWC,IAAOsB,aACrBH,EAAKU,QAAQL,MAAMC,KACnB,SAAC7B,EAAsC8B,GACtC,OAAO,gBAAC,EAAD,CAAe9B,KAAMA,EAAM+B,IAAKD,WASxCL,EAAQ,aCdCS,UAnBO,WAAM,IACnBjC,EAAkBC,cAAlBD,cACR,OACC,gCACC,gBAACkC,EAAA,EAAD,CAAQC,SAAS,QAChB,uBAAKjC,UAAU,SACd,0BAAQA,UAAU,wBACjB,sBAAIA,UAAU,uBACZF,EAAc,oBAEhB,yBAAIA,EAAc,oBAEnB,gBAAC,EAAD,W,qBCvBLoC,EAAOC,QAAU,CAAC,YAAc,MAAM,iBAAmB,MAAM,eAAiB,Q,mFC6CjEhC,IArCV,SAAC,GAAD,IAAGH,EAAH,EAAGA,UAAWO,EAAd,EAAcA,MAAO6B,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,IAAKhC,EAAjC,EAAiCA,IAAQiC,EAAzC,gEACJ,gCACE/B,EACA,gBAAC,IAAD,eAAKP,UAAWA,EAAWO,MAAOA,EAAOF,IAAKA,GAASiC,IACpDF,EACH,gBAAC,IAAD,eAAKpC,UAAWA,EAAWoC,MAAOA,EAAO/B,IAAKA,GAASiC,IAEvDD,GAAO,qCAAKrC,UAAWA,EAAWqC,IAAKA,EAAKhC,IAAKA,GAASiC","file":"component---src-pages-downloads-tsx-49c6ca1a11c3dd5223b4.js","sourcesContent":["import * as React from 'react';\n\nimport { DownloadsQuery_downloads_nodes } from './__generated__/DownloadsQuery';\n//import Link from '~components/utils/Link/Link';\nimport ImgSharp from '~components/utils/ImgSharp/ImgSharp';\nimport styles from './Downloads.module.scss';\nimport useIntlHelper from '~components/utils/Intl/IntlHelper';\n\nconst options = {\n\tyear: 'numeric',\n\tmonth: 'short',\n\tday: 'numeric',\n};\n\nconst DownloadsItem: React.FC<{\n\titem: DownloadsQuery_downloads_nodes;\n\ti?: number;\n}> = ({ item }) => {\n\tconst { formatMessage } = useIntlHelper();\n\n\treturn (\n\t\t<article className={styles.catalogueWrapper}>\n\t\t\t<ImgSharp\n\t\t\t\tclassName={styles.catalogueCardImage}\n\t\t\t\talt={item.id}\n\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\tfixed={item.image.childImageSharp.fixed}\n\t\t\t/>\n\n\t\t\t<div className={styles.catalogueCardContent}>\n\t\t\t\t<header className={styles.catalogueCardHeader}>\n\t\t\t\t\t{/* \t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{post.frontmatter.tags[0] !== undefined &&\n\t\t\t\t\t\t\t\tintl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `tags.${post.frontmatter.tags[0]}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t<h3 className={styles.catalogueCardTitle}>\n\t\t\t\t\t\t{formatMessage('catalogue.' + item.id)}\n\t\t\t\t\t</h3>\n\t\t\t\t</header>\n\t\t\t\t<section className={styles.catalogueCardExcerpt}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<a href={item.link}>\n\t\t\t\t\t\t\t<button className={styles.downloadButton}>\n\t\t\t\t\t\t\t\t{formatMessage('catalogue.button')}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\n\t\t\t\t<footer className={styles.catalogueCardMeta}>\n\t\t\t\t\t<div className={styles.catalogueCardBylineContent}>\n\t\t\t\t\t\t{/* \t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Link to={`/authors/${post.frontmatter.authors[0].id}/`}>\n\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `authors.${post.frontmatter.authors[0].id}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</span> */}\n\t\t\t\t\t\t{/* <span className={styles.catalogueCardBylineDate}>\n\t\t\t\t\t\t\t<time dateTime={catalogue.date}>\n\t\t\t\t\t\t\t\t{intl.formatDate(catalogue.date, options)}\n\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t</span> */}\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default DownloadsItem;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport DownloadsItem from './DownloadsItem';\nimport styles from './Downloads.module.scss';\nimport {\n\tDownloadsQuery,\n\tDownloadsQuery_downloads_nodes,\n} from './__generated__/DownloadsQuery';\nimport useIntlHelper from '~components/utils/Intl/IntlHelper';\n\nexport const Downloads: React.FC = () => {\n\tconst data: DownloadsQuery = useStaticQuery(QUERY);\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<article className=\"post-full post no-image page no-image\">\n\t\t\t<section>\n\t\t\t\t<h2>{formatMessage('catalogue.catalogues')}</h2>\n\t\t\t\t<div className={styles.flexWrapper}>\n\t\t\t\t\t{data.catalogues.nodes.map(\n\t\t\t\t\t\t(item: DownloadsQuery_downloads_nodes, i: number) => {\n\t\t\t\t\t\t\treturn <DownloadsItem item={item} key={i} />;\n\t\t\t\t\t\t},\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<h2>{formatMessage('catalogue.downloads')}</h2>\n\t\t\t\t<div className={styles.flexWrapper}>\n\t\t\t\t\t{data.downloads.nodes.map(\n\t\t\t\t\t\t(item: DownloadsQuery_downloads_nodes, i: number) => {\n\t\t\t\t\t\t\treturn <DownloadsItem item={item} key={i} />;\n\t\t\t\t\t\t},\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<h2>{formatMessage('catalogue.manuals')}</h2>\n\t\t\t\t<div className={styles.flexWrapper}>\n\t\t\t\t\t{data.manuals.nodes.map(\n\t\t\t\t\t\t(item: DownloadsQuery_downloads_nodes, i: number) => {\n\t\t\t\t\t\t\treturn <DownloadsItem item={item} key={i} />;\n\t\t\t\t\t\t},\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</article>\n\t);\n};\n\nconst QUERY = graphql`\n\tquery DownloadsQuery {\n\t\tcatalogues: allDownloadsYaml(filter: { category: { eq: \"catalogue\" } }) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tlink\n\t\t\t\timage {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfixed(width: 150) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFixed_withWebp_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdownloads: allDownloadsYaml(filter: { category: { eq: \"general\" } }) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tlink\n\t\t\t\timage {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfixed(width: 150) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFixed_withWebp_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmanuals: allDownloadsYaml(filter: { category: { eq: \"manual\" } }) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tlink\n\t\t\t\timage {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfixed(width: 150) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFixed_withWebp_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","import * as React from 'react';\n//import { graphql } from 'gatsby';\nimport Layout from '~components/Layout/Template/Layout';\nimport { Downloads } from '~components/Sections/Catalogue/Downloads';\nimport useIntlHelper from '~components/utils/Intl/IntlHelper';\n\n//import PageLayout from '~components/Layout/Templates/PageLayout/PageLayout';\n//import Default from '~components/Layout/Templates/Default';\n// The normal <a> tag is modified here (so that internal links use gatsby-link/LocalizedLink\n// More info:\n// https://www.gatsbyjs.org/docs/mdx/customizing-components/\n\nconst DownloadsPage = () => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<>\n\t\t\t<Layout template=\"page\">\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<header className=\"site-archive-header \">\n\t\t\t\t\t\t<h1 className=\"site-title no-image\">\n\t\t\t\t\t\t\t{formatMessage('catalogue.title')}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<p>{formatMessage('catalogue.desc')}</p>\n\t\t\t\t\t</header>\n\t\t\t\t\t<Downloads />\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n\nexport default DownloadsPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexWrapper\":\"h_w\",\"catalogueWrapper\":\"h_x\",\"downloadButton\":\"h_y\"};","import * as React from 'react';\nimport Img, { FixedObject, FluidObject } from 'gatsby-image';\n\nconst ImgSharp: React.FC<{\n\tclassName?: string;\n\tfixed?: FixedObject;\n\tfluid?: FluidObject;\n\tsrc?: string;\n\talt?: string;\n}> = ({ className, fixed, fluid, src, alt, ...props }) => (\n\t<>\n\t\t{fixed ? (\n\t\t\t<Img className={className} fixed={fixed} alt={alt} {...props} />\n\t\t) : fluid ? (\n\t\t\t<Img className={className} fluid={fluid} alt={alt} {...props} />\n\t\t) : (\n\t\t\tsrc && <img className={className} src={src} alt={alt} {...props} />\n\t\t)}\n\t</>\n);\n/*\nconst fixedObject = PropTypes.shape({\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n\nconst fluidObject = PropTypes.shape({\n\taspectRatio: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tsizes: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n */\n\nexport default ImgSharp;\n"],"sourceRoot":""}