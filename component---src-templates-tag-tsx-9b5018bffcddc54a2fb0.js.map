{"version":3,"sources":["webpack:///./src/components/Sections/AuthorList/AuthorList.module.scss","webpack:///./src/components/utils/ImgSharp/ImgSharp.tsx","webpack:///./src/templates/tag.tsx","webpack:///./src/components/Sections/PostCard/PostCard.tsx","webpack:///./src/components/Sections/AuthorList/HoverEffect/HoverOnAvatar.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/components/Sections/AuthorList/AuthorList.tsx","webpack:///./src/components/Sections/PostCard/PostCard.module.scss"],"names":["module","exports","ImgSharp","className","fixed","fluid","src","alt","props","TagTemplate","data","template","posts","edges","map","post","i","node","key","options","year","month","day","PostCard","isHome","intl","useIntl","isFeatured","frontmatter","featured","styles","postCard","postCardLarge","postCardImageLink","to","category","fields","slug","postCardImage","title","image","childImageSharp","postCardContent","postCardContentLink","postCardHeader","postCardPrimaryTag","undefined","tags","formatMessage","id","postCardTitle","postCardExcerpt","excerpt","postCardMeta","authors","postCardBylineContent","postCardBylineDate","dateTime","formatDate","date","formatNumber","timeToRead","HoverOnAvatar","onHoverIn","clearTimeout","hoverTimeout","setState","currentClass","activeClass","onHoverOut","self","ReferenceError","setTimeout","anchorRef","React","state","componentDidMount","this","current","addEventListener","passive","componentWillUnmount","removeEventListener","render","children","AuthorList","isPost","authorList","author","hovered","hover","ref","authorListItem","authorNameTooptip","authorCard","avatar","authorProfileImage","authorInfo","bio","authorAvatar","staticAvatar"],"mappings":"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","file":"component---src-templates-tag-tsx-9b5018bffcddc54a2fb0.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authorList\":\"k_V\",\"authorListItem\":\"k_W\",\"staticAvatar\":\"k_X\",\"authorAvatar\":\"k_Y\",\"authorNameTooptip\":\"k_Z\",\"authorProfileImage\":\"k_0\",\"authorCard\":\"k_1\",\"hovered\":\"k_2\",\"authorInfo\":\"k_3\",\"bio\":\"k_4\",\"postFullByline\":\"k_5\",\"postFullBylineMeta\":\"k_6\",\"noImage\":\"k_H\",\"authorSocialLink\":\"k_7\"};","import * as React from 'react';\nimport Img, { FixedObject, FluidObject } from 'gatsby-image';\n\nconst ImgSharp: React.FC<{\n\tclassName?: string;\n\tfixed?: FixedObject;\n\tfluid?: FluidObject;\n\tsrc?: string;\n\talt?: string;\n}> = ({ className, fixed, fluid, src, alt, ...props }) => (\n\t<>\n\t\t{fixed ? (\n\t\t\t<Img className={className} fixed={fixed} alt={alt} {...props} />\n\t\t) : fluid ? (\n\t\t\t<Img className={className} fluid={fluid} alt={alt} {...props} />\n\t\t) : (\n\t\t\tsrc && <img className={className} src={src} alt={alt} {...props} />\n\t\t)}\n\t</>\n);\n/*\nconst fixedObject = PropTypes.shape({\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n\nconst fluidObject = PropTypes.shape({\n\taspectRatio: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tsizes: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n */\n\nexport default ImgSharp;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Tag } from '~templates/__generated__/Tag';\nimport Layout from '~components/Layout/Template/Layout';\nimport PostCard from '~components/Sections/PostCard/PostCard';\n//import { TagHero } from '~components/Layout/Headers/Hero';\n\nconst TagTemplate: React.FC<{ data: Tag }> = ({ data }) => {\n\t/* \tconst { tag, posts } = data;\n\tconst postsNumber = posts.edges.length; */\n\n\treturn (\n\t\t<>\n\t\t\t<Layout template=\"tag\" data={data}>\n\t\t\t\t{/* \t<TagHero data={data} /> */}\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<div className=\" posts\">\n\t\t\t\t\t\t<div className=\"post-feed\">\n\t\t\t\t\t\t\t{data.posts.edges.map((post, i) => {\n\t\t\t\t\t\t\t\t/* \t\t\tconst noImage = post.node.frontmatter.image === null;\n\t\t\t\t\t\t\t\tconsole.log(noImage && post.node.frontmatter.title); */\n\t\t\t\t\t\t\t\treturn <PostCard post={post.node} i={i} key={i} />;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n\nexport default TagTemplate;\n\nexport const TagTemplateQuery = graphql`\n\tquery Tag($id: String!, $locale: String!) {\n\t\ttag: tagsYaml(id: { eq: $id }) {\n\t\t\tdescription\n\t\t\timage {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid {\n\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tid\n\t\t}\n\t\tposts: allMdx(\n\t\t\tfilter: {\n\t\t\t\tfields: { locale: { eq: $locale } }\n\t\t\t\tfrontmatter: { tags: { in: [$id] } }\n\t\t\t}\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdate(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\ttags\n\t\t\t\t\t\tcategory\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid {\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tauthors {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tavatar {\n\t\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\t\tfluid(maxWidth: 250, maxHeight: 250) {\n\t\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\texcerpt(pruneLength: 200, truncate: true)\n\t\t\t\t\ttimeToRead\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","import * as React from 'react';\n//import * as PropTypes from 'prop-types';\n//import styles from './Header.module.css';\nimport { useIntl } from 'react-intl';\nimport { Index_posts_edges_node as Post } from '~pages/__generated__/Index';\nimport AuthorList from '~components/Sections/AuthorList/AuthorList';\nimport Link from '~components/utils/Link/Link';\nimport ImgSharp from '~components/utils/ImgSharp/ImgSharp';\nimport styles from './PostCard.module.scss';\n\nconst options = {\n\tyear: 'numeric',\n\tmonth: 'short',\n\tday: 'numeric',\n};\n\nconst PostCard: React.FC<{\n\tpost: Post;\n\ti?: number;\n\tisHome?: boolean;\n}> = ({ post, i, isHome }) => {\n\tconst intl = useIntl();\n\tconst isFeatured = post.frontmatter.featured;\n\treturn (\n\t\t<article\n\t\t\tclassName={\n\t\t\t\tstyles.postCard +\n\t\t\t\t` ` +\n\t\t\t\t((isHome && isFeatured && 0 === i % 6 && styles.postCardLarge) || ``)\n\t\t\t}\n\t\t>\n\t\t\t<Link\n\t\t\t\tclassName={styles.postCardImageLink}\n\t\t\t\tto={`/${post.frontmatter.category}/${post.fields.slug}`}\n\t\t\t>\n\t\t\t\t<ImgSharp\n\t\t\t\t\tclassName={styles.postCardImage}\n\t\t\t\t\talt={post.frontmatter.title}\n\t\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\t\tfluid={post.frontmatter.image.childImageSharp.fluid}\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t<div className={styles.postCardContent}>\n\t\t\t\t<Link\n\t\t\t\t\tclassName={styles.postCardContentLink}\n\t\t\t\t\tto={`/${post.frontmatter.category}/${post.fields.slug}`}\n\t\t\t\t>\n\t\t\t\t\t<header className={styles.postCardHeader}>\n\t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{post.frontmatter.tags[0] !== undefined &&\n\t\t\t\t\t\t\t\tintl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `tags.${post.frontmatter.tags[0]}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h2 className={styles.postCardTitle}>{post.frontmatter.title}</h2>\n\t\t\t\t\t</header>\n\t\t\t\t\t<section className={styles.postCardExcerpt}>\n\t\t\t\t\t\t<p>{post.excerpt}</p>\n\t\t\t\t\t</section>\n\t\t\t\t</Link>\n\t\t\t\t<footer className={styles.postCardMeta}>\n\t\t\t\t\t<AuthorList authors={post.frontmatter.authors} />\n\n\t\t\t\t\t<div className={styles.postCardBylineContent}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{/* <Link to={`/authors/${post.frontmatter.authors[0].id}/`}> */}\n\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\tid: `authors.${post.frontmatter.authors[0].id}.title`,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{/* </Link> */}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className={styles.postCardBylineDate}>\n\t\t\t\t\t\t\t<time dateTime=\"2018-08-20\">\n\t\t\t\t\t\t\t\t{intl.formatDate(post.frontmatter.date, options)}\n\t\t\t\t\t\t\t</time>{' '}\n\t\t\t\t\t\t\t<span className=\"bull\">•</span>{' '}\n\t\t\t\t\t\t\t{intl.formatNumber(post.timeToRead)}{' '}\n\t\t\t\t\t\t\t{intl.formatMessage({ id: 'post.timeToRead' })}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default PostCard;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react';\n//import * as PropTypes from 'prop-types';\n\ninterface HoverOnAvatarProps {\n\tanchorRef?: React.RefObject<HTMLDivElement>;\n\tactiveClass?: string;\n\thoverTimeout?: NodeJS.Timeout;\n\tchildren: (hover) => JSX.Element;\n}\n\ninterface HoverOnAvatarState {\n\tcurrentClass?: string;\n}\nexport default class HoverOnAvatar extends React.Component<\n\tHoverOnAvatarProps,\n\tHoverOnAvatarState\n> {\n\tactiveClass: string;\n\thoverTimeout: NodeJS.Timeout;\n\tanchorRef: React.RefObject<HTMLDivElement>;\n\n\tconstructor(\n\t\tprops: Readonly<{\n\t\t\tanchorRef: React.RefObject<HTMLDivElement>;\n\t\t\tactiveClass: string;\n\t\t\thoverTimeout: NodeJS.Timeout;\n\t\t\tchildren: (hover) => JSX.Element;\n\t\t}>,\n\t) {\n\t\tsuper(props);\n\t\tthis.anchorRef = React.createRef();\n\t\t(this.activeClass = this.props.activeClass),\n\t\t\t(this.hoverTimeout = null),\n\t\t\t(this.state = {});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.anchorRef.current &&\n\t\t\tthis.anchorRef.current.addEventListener(`mouseout`, this.onHoverOut, {\n\t\t\t\tpassive: true,\n\t\t\t});\n\t\tthis.anchorRef.current &&\n\t\t\tthis.anchorRef.current.addEventListener(`mouseover`, this.onHoverIn, {\n\t\t\t\tpassive: true,\n\t\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this.hoverTimeout);\n\t\tthis.anchorRef.current.removeEventListener(`mouseover`, this.onHoverIn);\n\t\tthis.anchorRef.current.removeEventListener(`mouseout`, this.onHoverOut);\n\t}\n\n\tonHoverIn = () => {\n\t\tclearTimeout(this.hoverTimeout);\n\t\tthis.setState({ currentClass: this.activeClass });\n\t};\n\n\tonHoverOut = () => {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\t\tthis.hoverTimeout = setTimeout(function () {\n\t\t\tself.setState({ currentClass: `` });\n\t\t}, 200);\n\t};\n\n\trender() {\n\t\treturn this.props.children(this);\n\t}\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import * as React from 'react';\n//import * as PropTypes from 'prop-types';\n//import Link from '~components/utils/Link/Link';\nimport Img from '~components/utils/ImgSharp/ImgSharp';\nimport HoverOnAvatar from './HoverEffect/HoverOnAvatar';\nimport AvatarIcon from '~assets/icons/avatar-icon';\nimport { useIntl } from 'react-intl';\n\nimport styles from './AuthorList.module.scss';\n\nimport { Post_post_frontmatter_authors as Authors } from '~templates/__generated__/Post';\nimport { Author_author } from '~templates/__generated__/Author';\n\nconst AuthorList: React.FC<{\n\tauthors?: Authors;\n\tisPost?: boolean;\n}> = ({ authors, isPost }) => {\n\tconst intl = useIntl();\n\treturn (\n\t\t<ul className={styles.authorList}>\n\t\t\t{authors.map((author: Author_author, i: React.Key) => (\n\t\t\t\t<HoverOnAvatar key={i} activeClass={styles.hovered}>\n\t\t\t\t\t{(hover: {\n\t\t\t\t\t\tanchorRef: React.LegacyRef<HTMLLIElement>;\n\t\t\t\t\t\tstate: { currentClass: string };\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<li key={i} ref={hover.anchorRef} className={styles.authorListItem}>\n\t\t\t\t\t\t\t{!isPost && (\n\t\t\t\t\t\t\t\t<div className={styles.authorNameTooptip}>\n\t\t\t\t\t\t\t\t\t{intl.formatMessage({ id: `authors.${author.id}.title` })}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isPost && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={`${styles.authorCard} ${hover.state.currentClass}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{author.avatar ? (\n\t\t\t\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.authorProfileImage}\n\t\t\t\t\t\t\t\t\t\t\tfixed={author.avatar.childImageSharp.fixed}\n\t\t\t\t\t\t\t\t\t\t\tfluid={author.avatar.childImageSharp.fluid}\n\t\t\t\t\t\t\t\t\t\t\talt={author.title}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className={styles.authorProfileImage}>\n\t\t\t\t\t\t\t\t\t\t\t<AvatarIcon />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<div className={styles.authorInfo}>\n\t\t\t\t\t\t\t\t\t\t{author.bio ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.bio}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: `authors.${author.id}.title`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: `authors.${author.id}.bio`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t{/*\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t <Link to={`/authors/${author.id}/`}>  More\n\t\t\t\t\t\t\t\t\t\t\t\t\tposts\n\t\t\t\t\t\t\t\t\t\t\t\t </Link> by{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: `authors.${author.id}.title`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.\n\t\t\t\t\t\t\t\t\t\t\t\t</p>*/}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: `authors.${author.id}.title`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* \t\t\t{\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t\tRead <Link to={`/authors/${author.id}/`}>more\n\t\t\t\t\t\t\t\t\t\t\t\t\tposts</Link> by this author.\n\t\t\t\t\t\t\t\t\t\t\t\t</p>} */}\n\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{author.avatar ? (\n\t\t\t\t\t\t\t\t/* \t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={`/authors/${author.id}/`}\n\t\t\t\t\t\t\t\t\tclassName={isPost ? styles.authorAvatar : styles.staticAvatar}\n\t\t\t\t\t\t\t\t> */\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\t\t\tisPost ? styles.authorAvatar : styles.staticAvatar\n\t\t\t\t\t\t\t\t\t} ${styles.authorProfileImage}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\t\t\t\tclassName={styles.authorProfileImage}\n\t\t\t\t\t\t\t\t\t\tfixed={author.avatar.childImageSharp.fixed}\n\t\t\t\t\t\t\t\t\t\tfluid={author.avatar.childImageSharp.fluid}\n\t\t\t\t\t\t\t\t\t\talt={author.id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t/* \t\t</Link> */\n\t\t\t\t\t\t\t\t/* \t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={`/authors/${author.id}/`}\n\t\t\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\t\t\tisPost ? styles.authorAvatar : styles.staticAvatar\n\t\t\t\t\t\t\t\t\t} ${styles.authorProfileImage}`}\n\t\t\t\t\t\t\t\t> */\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\t\t\tisPost ? styles.authorAvatar : styles.staticAvatar\n\t\t\t\t\t\t\t\t\t} ${styles.authorProfileImage}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<AvatarIcon />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t/* </Link> */\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</HoverOnAvatar>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\n/* AuthorList.propTypes = {\n\tauthors: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tavatar: PropTypes.shape({\n\t\t\t\tchildImageSharp: {\n\t\t\t\t\tfixed: PropTypes.oneOfType([\n\t\t\t\t\t\tfixedObject,\n\t\t\t\t\t\tPropTypes.arrayOf(fixedObject),\n\t\t\t\t\t]),\n\t\t\t\t\tfluid: PropTypes.oneOfType([\n\t\t\t\t\t\tfluidObject,\n\t\t\t\t\t\tPropTypes.arrayOf(fluidObject),\n\t\t\t\t\t]),\n\t\t\t\t},\n\t\t\t}).isRequired,\n\t\t\tbio: PropTypes.string,\n\t\t}),\n\t).isRequired,\n\tisPost: PropTypes.bool,\n}; */\nexport default AuthorList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"j_z\",\"postCardImageLink\":\"j_B\",\"postCardImage\":\"j_C\",\"postCardContentLink\":\"j_D\",\"postCardHeader\":\"j_F\",\"postFeed\":\"j_G\",\"noImage\":\"j_H\",\"postCardPrimaryTag\":\"j_J\",\"postCardTitle\":\"j_K\",\"postCardContent\":\"j_L\",\"postCardExcerpt\":\"j_M\",\"postCardMeta\":\"j_N\",\"postCardBylineContent\":\"j_P\",\"postCardBylineDate\":\"j_Q\",\"bull\":\"j_R\",\"postCardLarge\":\"j_S\",\"authorProfileImage\":\"j_T\"};"],"sourceRoot":""}