{"version":3,"sources":["webpack:///./src/components/Sections/Services/Services.module.css","webpack:///./src/pages/services.tsx","webpack:///./src/components/Sections/Services/Services.tsx"],"names":["module","exports","ProductPage","formatMessage","useIntlHelper","template","className","Services","data","useStaticQuery","QUERY","styles","feed","services","sections","map","section","key","id","card","cardImg","fluid","image","childImageSharp","cardContent","cardContentLink","cardHeader","cardTitle","cardExcerpt","links","link","cardLink","to"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,MAAQ,MAAM,mBAAqB,MAAM,KAAO,MAAM,KAAO,MAAM,YAAc,MAAM,QAAU,MAAM,YAAc,MAAM,gBAAkB,MAAM,WAAa,MAAM,UAAY,MAAM,YAAc,MAAM,SAAW,Q,kCCDzO,2DAwBeC,UAhBK,WAAM,IACjBC,EAAkBC,cAAlBD,cACR,OACC,gBAAC,IAAD,CAAQE,SAAS,QAChB,uBAAKC,UAAU,UACd,0BAAQA,UAAU,uBACjB,sBAAIA,UAAU,wBACZH,EAAc,oBAGjB,gBAAC,IAAD,U,kCClBJ,8FAiDeI,IAxCE,WAChB,IAAMC,EAAOC,yBAAeC,GACpBP,EAAkBC,cAAlBD,cACR,OACC,uBAAKG,UAAU,SAId,uBAAKA,UAAWK,IAAOC,MACrBJ,EAAKK,SAASC,SAASC,KAAI,SAAAC,GAAO,OAClC,2BAASC,IAAKD,EAAQE,GAAIZ,UAAWK,IAAOQ,KAAMD,GAAIF,EAAQE,IAC7D,gBAAC,IAAD,CACCZ,UAAWK,IAAOS,QAClBC,MAAOL,EAAQM,MAAMC,gBAAgBF,QAGtC,uBAAKf,UAAWK,IAAOa,aACtB,uBAAKlB,UAAWK,IAAOc,iBACtB,0BAAQnB,UAAWK,IAAOe,YACzB,sBAAIpB,UAAWK,IAAOgB,WACpBxB,EAAca,EAAQE,GAAK,YAG9B,2BAASZ,UAAWK,IAAOiB,aACzBzB,EAAca,EAAQE,GAAK,SAC3BF,EAAQa,MAAMd,KAAI,SAAAe,GAAI,OACtB,qBAAGxB,UAAWK,IAAOoB,SAAUd,IAAKa,EAAKZ,IACxC,gBAAC,IAAD,CAAMc,GAAIF,EAAKA,MAAO3B,EAAc2B,EAAKZ,IAAzC,mBAeX,IAAMR,EAAQ","file":"component---src-pages-services-tsx-5e891d53852182876c26.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"d_b\",\"productsPageHeader\":\"d_k\",\"feed\":\"d_c\",\"card\":\"d_l\",\"cardImgLink\":\"d_f\",\"cardImg\":\"d_g\",\"cardContent\":\"d_m\",\"cardContentLink\":\"d_n\",\"cardHeader\":\"d_p\",\"cardTitle\":\"d_h\",\"cardExcerpt\":\"d_j\",\"cardLink\":\"d_q\"};","import * as React from 'react';\n//import * as PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '~components/Layout/Template/Layout';\n\nimport useIntlHelper from '~components/utils/Intl/IntlHelper';\nimport Services from '~components/Sections/Services/Services';\n\nconst ProductPage = () => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<Layout template=\"page\">\n\t\t\t<div className=\"inner \">\n\t\t\t\t<header className=\"site-archive-header\">\n\t\t\t\t\t<h1 className=\"site-title  no-image\">\n\t\t\t\t\t\t{formatMessage('services.title')}\n\t\t\t\t\t</h1>\n\t\t\t\t</header>\n\t\t\t\t<Services />\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default ProductPage;\n","import * as React from 'react';\n//import { courses } from './data';\n//import { Twemoji } from 'react-emoji-render';\nimport Img from 'gatsby-image';\nimport useIntlHelper from '~components/utils/Intl/IntlHelper';\nimport styles from './Services.module.css';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Link from '~components/utils/Link/Link';\n\nconst Services = () => {\n\tconst data = useStaticQuery(QUERY);\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<div className=\"inner\">\n\t\t\t{/* \t\t\t<header className={styles.productsPageHeader}>\n\t\t\t>\n\t\t\t</header> */}\n\t\t\t<div className={styles.feed}>\n\t\t\t\t{data.services.sections.map(section => (\n\t\t\t\t\t<article key={section.id} className={styles.card} id={section.id}>\n\t\t\t\t\t\t<Img\n\t\t\t\t\t\t\tclassName={styles.cardImg}\n\t\t\t\t\t\t\tfluid={section.image.childImageSharp.fluid}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div className={styles.cardContent}>\n\t\t\t\t\t\t\t<div className={styles.cardContentLink}>\n\t\t\t\t\t\t\t\t<header className={styles.cardHeader}>\n\t\t\t\t\t\t\t\t\t<h2 className={styles.cardTitle}>\n\t\t\t\t\t\t\t\t\t\t{formatMessage(section.id + '.title')}\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t<section className={styles.cardExcerpt}>\n\t\t\t\t\t\t\t\t\t{formatMessage(section.id + '.desc')}\n\t\t\t\t\t\t\t\t\t{section.links.map(link => (\n\t\t\t\t\t\t\t\t\t\t<p className={styles.cardLink} key={link.id}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={link.link}>{formatMessage(link.id)} </Link>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</article>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Services;\n\nconst QUERY = graphql`\n\tquery ServicesQuery {\n\t\tservices: productsYaml(id: { eq: \"services\" }) {\n\t\t\tid\n\t\t\tsections {\n\t\t\t\tid\n\t\t\t\timage {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid(maxWidth: 500) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp_tracedSVG\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlinks {\n\t\t\t\t\tid\n\t\t\t\t\tlink\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}